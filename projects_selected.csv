,submission_gal_url,project_URL,github_links,participants,participants_num,build_with,repo_link,repo,submitted_to_link,submitted_to_name,submitted_to_hacks_num,likes,comments,description
11564,https://devfest-algiers-2021-hackathon.devpost.com/project-gallery,https://devpost.com/software/cheq-0vk7gq,https://github.com/Ne0Ss/CheQ,https://devpost.com/riad-boussoura,1,"blender, figma, mediapipe, python",https://github.com/Ne0Ss/CheQ,github.com,https://devfest-algiers-2021-hackathon.devpost.com/,DevFest Algiers 2021 Hackathon,1,0,0,"Inspiration:
  - We were inspired by the LG's motivation of bringing smart solutions for safer and more confortable homes.

What it does:
  - It detects if the personne is fainted, our system will be able to classify if the situation is dangeorous or not its will send a message to any family member that its predefined on the application and the Autorities  

How we built it:
  - We use mediapipe librairie, developed by Google, it offers open source cross-platform, customizable ML solutions for live and streaming media.\nIt contains model called pose: it is a ML solution for high-fidelity body pose tracking, inferring 33 3D landmarks and background segmentation mask on the whole body.

Challenges we ran into:
  - How the system detects that the persone is lying down on the floor \nHow the system can detect the ok sign using the right calculations 

Accomplishments that we're proud of:
  - Our hard work.

What we learned:
  - We learned a lot in time management and finding solutions to problems we did not expect.

What's next for CheQ:
  - We are aiming to improve and updgrade the system so that it can also help detecting other kinds of house incidents. "
26344,https://fellowship-orientation-22-sum.devpost.com/project-gallery,https://devpost.com/software/templatify,"https://github.com/BoscoCHW, https://github.com/iflinda, https://github.com/BoscoCHW/MLH-Hackathon-Jupyterlab-Templatify","https://devpost.com/BoscoCHW, https://devpost.com/iflinda",2,"javascript, python, react, typescript","https://www.figma.com/file/AOZGbaqUhAgOG9BeNy4HoC/MLH-Hackathon?node-id=0%3A1, https://www.figma.com/file/AOZGbaqUhAgOG9BeNy4HoC/MLH-Hackathon?node-id=0%3A1","www.figma.com, www.figma.com",https://fellowship-orientation-22-sum.devpost.com/,MLH Fellowship Orientation Hackathon - Summer A 2022,1,3,3,"Templatify & What it Does:
  - Templatify is an extension for JupyterLab that allows users to create templates based on uploaded data from a csv file to more easily conduct data analysis. We decided to create a template extension that allows users to select a csv file and choose the types of data analysis that they'd like to perform. These analyses can range from histograms, scatter plots, to correlation matrices.

Inspiration:
  - When thinking about what we could work on for this hackathon, we really had to understand how the Jupyter Lab ecosystem worked. We found that this platform is widely used by data scientists while they are collecting, organizing, and analyzing their data.
  - Upon learning more about why people loved using JupyterLab, we started to understood that their userbase really appreciated the multipurpose and usable tools that the application provided. Thus, we also wanted to provide additional tools to users to streamline their work and make it easier to analyze.

How we built it:
  - Front-end: TypeScript, React, JS
  - Back-end: Python

Challenges we ran into:
  - As with learning any new platform and ecosystem, it took us awhile to really understand how to use JupyterLab in conjunction with the skills that we currently have. We spent a lot of time early on setting up our environment and following along with tutorials to make sure we understood both the tools and userbase we were making the extension for.

Accomplishments that we're proud of:
  - We're really proud that we were able to accomplish as much as we did given the time constraints on a new platform. We're also think that Templatify is a good idea and could eventually be a really usable extension to JupyterLab ecosystem.

What we learned:
  - We really learned how to work in our group of two to solve a lot of the issues that we were having. It was really beneficial having an extra set of eyes and a fresh mind when someone was stuck on an issue for a really long time.
  - Another cool thing that we learned was how much preparation it took for data scientists to really excel at in their role.

What's next for Templatify:
  - Although we're not sure of how far we want to take the project, we firmly believe that Templatify could really be useful for users looking for a quick Jupyter Notebook template. We would potentially like to revisit this project at a later date when we're more familiar with JupyterLab."
78211,https://hackuc3.devpost.com/project-gallery,https://devpost.com/software/np-volunteer,https://github.com/AMoinian2004/Armin,"https://devpost.com/AMoinian2004, https://devpost.com/alekradak, https://devpost.com/ryomat, https://devpost.com/splashing23",4,"css, html",https://github.com/AMoinian2004/Armin,github.com,https://hackuc3.devpost.com/,HackUC III,1,1,1,"Inspiration: We wanted to help the community by connecting those who want to do good and chose who need help. We also wanted to fix a problem, and from personal experience, we understand that it can be difficult to get community service hours through volunteering.:

What it does: Our website represents our idea of connecting volunteers and those who need help. An organization can register, putting in who they need. Then, if a person registers and meets the qualifications, the opportunity will be shown to them. They can read more about the opportunity, visit the organizations website, and apply.:

How we built it: We used HTML to make an aesthetically pleasing website. We used attributes to link the top of the page to other parts of it, to make it easier to navigate. We inserted images and links to other websites to allow the page to be user friendly. The registration part was hardest. We had to ask for input from the user. Then we had to store and compare this user.:

Challenges we ran into: Storing and comparing the information was the hardest part. We had to use PHP to connect the html file to a SQL database. From there, we had to compare the data, and use it to formulate results. However, we were unable to use this as html is unable to store data itself but we had to use a separate database to put our information into. This database required subscription and we couldn't figure out a way to successfully connect the PHP file to the database.:

Accomplishments that we're proud of: We are proud of the fact that with little coding experience we were able to work together and make a website that would actually work in the real world. Coming in, we didn't think that we would achieve much, and we are now proud that we made a functioning website.:

What we learned: As well as learning the basics of html, css, and php, we learned the value of hard work. Throughout the day we worked hard and were able to make an actual website with little previous experience.:

What's next for NP Volunteer: Next, we plan to study PHP and SQL in order to make the website totally operational. Then, we plan to actually make NP Volunteer real. We plan to work with the town council, high school, and local businesses to make our idea a reality."
101593,https://uipath2019.devpost.com/project-gallery,https://devpost.com/software/color-detector,https://github.com/NitinSafaya/ColorDetector,https://devpost.com/NitinSafaya,1,"custom-activity, euclid, uipath, visual-studio",https://github.com/NitinSafaya/ColorDetector,github.com,https://uipath2019.devpost.com/,Power Up Automation,1,1,0,"Inspiration:
  - My manager asked me a question related to color based decision making. But at that time i was unsure if i could solve it. so I tried hard and came up with this custom activity.

What it does:
  - [1] Extract color from any pixel on the screen \n[2] Extract colors from image datatype \n[3] Extract colors from image file 
  - [1] PrimaryColor - predefined enum consists of 12 primary colors \n[2] KnownColor - Default Color enum in System.Drawing 

How I built it:

Challenges I ran into:

Accomplishments that I'm proud of:

What I learned:

What's next for Color Detector:

""
https://devpost.com/software/drug-finder,""Inspiration : I was looking for alternate drugs with different prices.:

What it does : It takes an input from the user and mails the excel containing relevant data.:

How I built it : Using UiPath Studio:"
120264,https://makeschool.devpost.com/project-gallery,https://devpost.com/software/interactions,,https://devpost.com/miracleyear2,1,,Nan,Nan,https://makeschool.devpost.com/,Make School's Student App Competition 2017,1,13,11,"Inspiration:
  - In this life, People Communicates, Interacts to do businesses,Employers interacting with Employees,\nCustomers interacting with Sellers, Lecturers with Students to share ideas,\nfamily discussions,Doctors interacting with Patients and Caregivers etc. To make interactions more easier than ever we have\ncreated a platform called Interactions
  - Note: This application is still in its development phase and has not been completed yet. They are many more features to be Integrated...
  - Okay, Its time to Interact. Interaction is an instant real-time messaging system that provides near or remote \n one to one and one to many group or Team chat conferencing, SMS and Email messaging System. it has diverse of applications.
  - Lecturers & Students Interaction:\nInteractions has made communications  more easier than ever.\nStudents and Lecturers can now interacts with one another on educational purposes. Shares Digital Files,Photos, Quizzess, Assignments, Lectures and educates one another etc via one to one Chat and One to Many Chat,SMS and Email Conferencing System, all in real-time.
  - Doctors & Patients Interactions\n           Doctors and Patients Communication is now awesome. Doctors, Patients and their respective CareGiver can now have one to one as well\nas one to many(Conferencing) Chat interaction to educate one another, solve medical issues and treatment. They can Share Medical files in the form \nof X-RAY Scanned Data, Lab Results, Digital photos all in real-time....
  - Employer & Employee Interaction...\n              Communication between Employer, Employee and their respective customers has been easier than ever. They can have one to one chat \ncommunication, Group Conferencing Chat communication and can communicate remotely with Digital files sharing options. All in real-time...\n

Technology Used:
  - Building a Real-Time Messaging  &  Communication System requires Full Duplex Technology that can allow sending and receiving of rich text messages simultaneously. This will help to prevent Server Timely data call for updates, reduces Sever-load and latency while optimizing Server Performance.\nThis app was built using PHP, NodeJs AND Socket.IO 

Features Already Integrated:

What's next for Interactions:
  - 1.)Introduction of Video and Audio Calls\n2.)Digital Whiteboard Sessions(For Live Conferencing)\n3.)Message Propagation Via SMS if the recipient is Offline\n4.)Porting the app to Android & IOS and Creation of an extension to Google Chrome and Mozilla Browser...\n5.) Many More."
175914,https://wolfhacks21.devpost.com/project-gallery,https://devpost.com/software/howler-heart,https://github.com/IonicArgon/howler-sustain-app,"https://devpost.com/IonicArgon, https://devpost.com/Wiserlightning, https://devpost.com/agrimreaper, https://devpost.com/itsrajan",4,"arduino, c++, figma, node.js, typescript","https://www.figma.com/proto/JTQjF38vPDt4dh2QsdEpF9/Howler-Heart?node-id=13%3A3&scaling=scale-down&page-id=0%3A1, https://www.figma.com/proto/JTQjF38vPDt4dh2QsdEpF9/Howler-Heart?node-id=13%3A3&scaling=scale-down&page-id=0%3A1, https://www.figma.com/proto/JTQjF38vPDt4dh2QsdEpF9/Howler-Heart?node-id=13%3A3&scaling=scale-down&page-id=0%3A1","www.figma.com, www.figma.com, www.figma.com",https://wolfhacks21.devpost.com/,WolfHacks21,1,3,1,"Inspiration:
  - A good environment and sustainability are absolutely necessary for human survival, however, without any organization, a fully sustainable planet wouldn't be able to survive. Our group, Team 25, were motivated to create a product that would manage all of the systems on Planet Howler.

What it does:
  - Our product, Howler Heart, condenses all of the information from the various systems into a single, primary dashboard. We've managed to create a single analytics page that shows live updates of the weather, generated power, and agriculture. By using wireless technologies, we are able to seamlessly transfer data from various locations into Howler Heart, providing insightful data about the sustainability on the planet.

How we built it:
  - By using various sensors attached to an Arduino, we are able to collect a lot of data on the sustainability on planet Howler. C++ is able to parse the data coming from the Arduino and store it as data to transfer wirelessly. Then, Figma was used to create the final Howler Heart dashboard and provide live updates about the various systems on the planet. A typescript API was also created for surveillance of greenhouses. 

Challenges we ran into:
  - A challenge we came across was creating a software using C++ using SFML. Since SFML wasn't meant to prototype analytics C++ software, we attempted to use QT, another C++ API. However, our lack of knowledge with QT made it difficult to create a viable solution. This is why we decided to create a frontend analytics board with Figma.
  - Another challenge we faced was working collaboratively through an online interface. While the entirety of our group got along very well, completing online group work was very difficult, especially when creating 3D models and creating the physical Arduino prototype.  However, we managed to overcome this challenge and ended up creating fairly good work.
  - Our final challenge was serial communication between the Arduino and the computer. To fix this, we implemented an external C++ library to make the Arduino function. 

Accomplishments that we're proud of:

What we learned:

What's next for Howler Heart:
  - Convert our prototype to a finalized C++ software that can be implemented in real life.  A GUI would be used to make the project flow more smoothly. Creating a functional backend and a data-base for live analytics would also be a next step. "
215509,https://pickhacks2021.devpost.com/project-gallery,https://devpost.com/software/owlie,https://github.com/sahithvibudhi/owlie,"https://devpost.com/skvg45, https://devpost.com/sppgn, https://devpost.com/vijaydachepally897",3,"bootstrap, css, docker, express.js, heroku, html, javascript, jquery, mongodb, node.js","https://github.com/sahithvibudhi/owlie, https://github.com/sahithvibudhi/owlie","github.com, github.com",https://pickhacks2021.devpost.com/,PickHacks 2021,1,0,0,"Inspiration:
  - Suggestions we get on platforms like Netflix, Youtube, Spotify, and Medium are great. but we tend to be inquisitive about what our friends are watching. So, we built a chrome extension that suggests media based on what your friends are watching

What it does:
  - \nAdd Friends and make privacy settings\n\nOwlie tells you where your friends are on the internet whenever you open a New Tab\n\nOwlie let's you know if your friend is on the same site. so, you can browse the same media content\n\n
  - Watch Demo: https://www.loom.com/share/bc21bf8e5d5e49a1b033f16cf8923b2e

How we built it:
  - We built the chrome extension in HTML, CSS, and Vanilla Javascript and the server using NodeJS, Mongo, Docker, and Heroku

Challenges we ran into:

Accomplishments that we're proud of:
  - We had to write a background worker for the browser that keeps tracks of which website the user is on and sync the data to the server based on the user's privacy settings - which was hard to design and implement.  We are proud of implementing this feature without comprising on user's privacy

What we learned:
  - We have learned to build chrome extensions, CI/CD to automatically deploy backend to Heroku. But most importantly, how to rapidly spin up a prototype

What's next for Owlie:"
220547,https://intuitionv6.devpost.com/project-gallery,https://devpost.com/software/facial-expression-recognition,,"https://devpost.com/Booxworm, https://devpost.com/hanliong-looi",2,"keras, numpy, python, scikit-learn, tensorflow",Nan,Nan,https://intuitionv6.devpost.com/,iNTUition v6.0,1,0,0,"Inspiration:
  - People with low social EQ struggle to understand the human body language and unable to read what they're feeling from the facial expressions. We hope that this project is able to fill this gap and help these people have more meaningful conversations

What it does:
  - Our project is a model that reads an image of a face and accurately output the emotions of the person in the image

How we built it:
  - We made use of image processing in keras and tensorflow, and through the use of a convolutional neural network (VGG-16), we are able to train the model to recognize faces in the images and their emotions

Challenges we ran into:
  - With only 24 hours, we can only train the model with a limited amount of data and it was difficult finding a decent amount of data set of Asian faces showing the expressions we wanted

Accomplishments that we're proud of:
  - We are able to build the program and train the model in the nick of time and the program was able to produce promising results

What we learned:
  - We have learned that when training the model, the number of layers increases the training time exponentially and it is important to balance the effectiveness of the model and the time taken to train the model when we are working on a project with a time constraint

What's next for Facial Expression Recognition:
  - We can link this project with Skype and improve it even further to make it real time instead of a screen capture so that the project is more suitable for real life applications"
222355,https://hackrice-9.devpost.com/project-gallery,https://devpost.com/software/occupotty-sx63pm,https://github.com/texashoneybadgers/HackRice9,"https://devpost.com/Chao07, https://devpost.com/SpenceSimm, https://devpost.com/murphe14325, https://devpost.com/ryancorridor",4,"api, arduino, bootstrap, css, firmata, html, javascript, jquery, mongodb, python",https://github.com/texashoneybadgers/HackRice9,github.com,https://hackrice-9.devpost.com/,HackRice 9,1,2,2,"Inspiration:
  - OccuPotty was inspired by one of our team members recent experiences. At his internship in the summer, there were two bathrooms on his floor, and they were on opposite corners. Numerous times he walked to the bathroom only to find the bathroom was occupied and his emergency had to wait. We decided to take this _""""unique"""" _ challenge and find a solution.

What it does:
  - The user experience is consumed through a webpage. There it lists the locks that are under the organization and shows whether they are locked or unlocked. In our case, we modeled our organization after a bathroom. If someone enters or exits a stall, the webpage will update to reflect the new status of the lock.
  - There is also a live physical status on the lock represented by LEDs. This could be used by maintenance to troubleshooting lock issues.

How we built it:
  - For hardware, we have an Arduino monitoring and controlling that status of the locks. To interact with it, we have chosen to utilize pyFirmata, a Python library of Firmata.
  - Any information is transferred via an API, called LockRice, that we have crafted ourself. This API interacts with a MongoDB database and reflects the current status that the Arduino sends it.
  - For the front end, we are using HTML, CSS, JavaScript, and JQuery to represent the current status of the lock and get the current status from the MongoDB database.

Challenges we ran into:
  - The biggest challenge we faced on the software side was figuring out how to request data from our database and connect it to our toggle feature on the website. It took lots of researching and trial and error to overcome this challenge.
  - On the hardware side, our engineers faced a challenge of the vacant light acting on its own accord. After double and triple-checking the python code and the circuitry, they overcame the challenge.

Accomplishments that we're proud of:
  - We are proud of the progress we made throughout this project. Coming into this event, none of us had a lot of experience or knowledge into what they were assigned to do. This was on purpose, as it was a way to learn different technologies.

What we learned:
  - """"I learned how to create an API from scratch and how to connect that various parts of the project."""" - Ryan Hall
  - """"I learned more about databases and APIs while also further learning and refining my knowledge of front end languages."""" - Emily Murphy
  - """"I learned to integrate hardware with software by utilizing databases and leveraging APIs."""" - CJ Sewell
  - """"I learned more about the intricacies of Arduino circuits, specifically how to create more complex circuitry."""" - Spence Simmons

What's next for OccuPotty:
  - OccuPotty could be expanded in several ways, such as adding automatic locking, or a system of reservations. This application can also be shown to be useful in other areas."
277348,https://behavioralhealth.devpost.com/project-gallery,https://devpost.com/software/truclinic,,"https://devpost.com/LaurelChristensen, https://devpost.com/TruClinic, https://devpost.com/vitalio",3,"amazon-ec2, amazon-rds-relational-database-service, amazon-web-services, android, angular.js, bootstrap, google-app-engine, html5, javascript, nginx, node.js, php, postgresql, rabbitmq, react, react-native, redis, socket.io, stylus, symfony, typescript",Nan,Nan,"https://behavioralhealth.devpost.com/, https://gehealthcloud.devpost.com/","Behavioral Health Patient Empowerment Challenge, GE Health Cloud Innovation Challenge",2,23,23,"Inspiration:
  - Justin Kahn was struck in the head with a baseball bat when he was 14 years old. In his teens and twenties, he would suffer from anxiety and panic attacks. When Justin was 27, he had a panic attack that scared him into seeking out the help of a neurologist. After working with her for almost a year, she discovered that he did not have PTSD. Instead, what he had been experiencing for 13 years, were seizures that were caused by the traumatic brain injury. She put him on an anti-seizure medication that alleviated what he had been experiencing.
  - In 2009, he read an article that was in the speech that Robert Gates, the former Secretary of Defense, gave to the graduating class of West Point. He said that the Department of Defense was going to begin investing billions of dollars each year to address the PTSD epidemic plaguing all branches of the military. 
  - Justin grew up around the VA. His stepfather was an administrator for the VA. He thought that the way to address this problem would be to establish a relationship at the beginning of the service member’s career with their home state VA and have it continue into the rest of their lives. He knew from his own experience that the most effective mechanism for him to deal with his seizures, which can be similar to the symptoms of PTSD, was having someone to talk to. 
  - A lot has been done to address mental health in the military, but there are some service members that do not proactively address the issues they are dealing with. The reason is there can be a stigma attached with having mental health issues, as well as real world implications because they can be pulled away from their unit, possibly lose rank or pay, get passed over for advancement, or even be discharged. The result is, as troops transition to veteran status, some come back suffering from traumatic experiences that are having a dramatic effect on their transition back to civilian life. 
  - Justin approached the Salt Lake VA with the idea of having active duty troops being able to meet with VA practitioners from their home state while deployed, and have it be done through secure video conferencing. The VA agreed to test the concept of online care by teaching relaxation exercises to a small group veterans to see if they would have the same retention rate or better as doing in-person. 
  - When Justin received pre-seed capital in 2012 to start TruClinic, he approached his friend and software engineer, Trevor Wilkin. Justin Kahn/CEO and Trevor Wilkin/CTO have known each other since 2007, and have worked on multiple creative projects together. Brian Russon was originally introduced to TruClinic while he was with Microsoft and looking for Surface use cases in healthcare, of which we were utilizing with the University of Utah’s NICU unit. Brian joined the company initially in an advisory role for over three years before joining the company as Chief Revenue Officer. Lori Douglas joined the company as a result of her excellent work in the physician staffing industry with one of our investor/board members when we identified the need for someone to manage and grow our existing clients to ensure client success with our early adopters. Alex Zoller & Vitaly Leokumovich, co-Founders of Overl.ai joined the company in 2017 with the TruClinic acquisition of Overl.ai. Alex has over 10 years in the EHR industry and is now TruClinic's Head of Product. Vitaly is the co-Founder of IDEOM and Ego7 and is now TruClinic's VP of Engineering. 

What it does:
  - TruClinic connects the clinical applications and services healthcare organizations need to fit their unique workflows and patient population by streamlining communication between multiple clinical systems and services to eliminate repetitive tasks and data entry. Fast access to information when providers need it leaves them with the time they need to focus on patient care by staying connected with patients through telehealth technologies.
  - TruClinic gives the caregivers the tools they need to provide the right types of healthcare services and information at the right time to best serve the patient's individual needs. TruClinic is used as an extensibility of the systems the providers and staff use on a daily basis. TruClinic solves the problem of patient management, patient engagement and patient adherence by giving the providers the ability to customize the telehealth experience based on their different subsets of patients.

How we built it:
  - Trevor Wilkin and Jon Fuller/Director of Customer Support were the driving force of the first two iterations of the TruClinic platform. The first version was built on a LAMP stack using Javascript. Version 1.0 used a Flash based video codec. TruClinic was an early adopter of WebRTC for the video codec which was rolled out in Version 2, along with moving away from Javascript and into Node.js and Angular. Version 3 (code name: Olympus) is built on Node.js, Angular, React and Typescript. 

Challenges we ran into:
  - We believed that TruClinic would be the solution that providers would flock to. The thought at first was to get customers, regardless of size of practice or length of sales cycle. We were not charging enough either. The positive side of the challenge was that we got a birds eye view into all different types of healthcare providers. The negative side was that we did not have a cohesive sales strategy and it was very hard to predict revenue. Small practices were easy to sell to, but they had high attrition rates because they did not have the infrastructure or budget to implement a successful and scalable telemedicine strategy. Enterprise customers have the infrastructure and budgets, but the sales cycles can be anywhere between 6 months to 2 years. This experience helped to shape the customer acquisition strategy and that helped us focus on hone in on our sales process.
  - Fundraising was also a major challenge. As a small company where everyone is wearing multiple hats, the time and resources needed to fundraise were taking away from other tasks that needed to be completed. The executive team decided to raise the least amount of funds possible and to bootstrap for as long as possible. The whole team learned to operate using lean methodology and kept the growth in line with revenue. The company was not able to grow as fast as it had projected, but it gave us time to work out all the bugs before it was ready to scale.

Accomplishments that we're proud of:
  - TruClinic was a winner of the Village Capital/VentureWell/SOURCE/Hitachi Foundation accelerator in 2014. The company is also an alumni of the Startup Bootcamp Miami accelerator in 2016. TruClinic currently has 11 employees and 7 independent contractors. The technology has been featured in trade organizations and publications such as The Advisory Board, AGC Partners, IDC Global Insights, the Journal of mHealth & Healthcare IT News. The company has two issued patents which outline the process for browser based online healthcare consultations (US Patent 8,718,245 and US Patent 9,374,394) with a third in review. TruClinic currently has 25 customers spanning 4 continents, in 7 countries and in all 50 states.

What we learned:
  - The use cases for telehealth are as broad as the providers and the patients they care for. We have learned that our customers want a flexible technology with a modular feature set that they can scale throughout their entire organization. We have also learned that healthcare moves at different paces, depending on the priorities, budget, internal teams, etc. We learned to work with our customers to develop the strategies and deployment plans that will lead to a successful rollout. We treat our customers like partners and learn as much from them as they do from us.

What's next for TruClinic:
  - We will be doing a fundraise at the end of Q1/2017 for sales and marketing scale. On the technology front, we will be integrating biometric, biofeedback and wearable feeds intro TruClinic sessions, and will continue with additional EHR integrations. The future is bright and we're all wearing shades."